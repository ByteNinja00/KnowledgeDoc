apiVersion: apps/v1
kind: Deployment
metadata:
  name: volume-demo
spec:
  replicas: 2
  selector:
    matchExpressions:
      - key: app
        operator: In
        values:
          [nginx]
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx-deployment
          image: nginx:latest
          ports:
            - containerPort: 80
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          volumeMounts:
            - name: host-volume
              mountPath: /data
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: nginx
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: host-volume
          hostPath:
            path: /home/ubuntu
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080